{"version":3,"sources":["Pages/Home/index.js","Services/JS/useWindowSize.js","Components/Map/index.js","Components/Header/index.js","Components/DistanceSensor/index.js","Components/Joystick/index.js","Components/Page/index.js","Pages/Direction/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","socket","className","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","initialPositions","x","y","angle","Map","positions","setPositions","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","mapCtnerRef","useRef","initEvent","console","log","current","offsetWidth","offsetHeight","on","_positions","ref","draggable","points","closed","rotation","stroke","links","link","icon","ColorButton","withStyles","theme","root","backgroundColor","lightBlue","minWidth","margin","padding","fontSize","lineHeight","borderRadius","Button","Header","map","linkKey","key","to","initialDistances","left","middle","right","DistanceSensor","distances","setDistances","_distance","distanceFormat","parseFloat","toFixed","flag","options","mode","position","top","style","outline","onMove","evt","data","values","degree","force","distance","emit","setTimeout","onEnd","Page","children","Grid","container","classNames","Direction","item","sm","Joystick","App","setSocket","getIp","a","ip","localIpUrl","openSocket","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kVAaeA,G,oBATF,SAAC,GAAe,EAAbC,OAEd,OACE,yBAAKC,UAAU,mB,iBCyBJC,MA9Bf,WACE,IAAMC,EAA6B,kBAAXC,OAExB,SAASC,IACP,MAAO,CACLC,MAAOH,EAAWC,OAAOG,gBAAaC,EACtCC,OAAQN,EAAWC,OAAOM,iBAAcF,GANrB,MAUaG,mBAASN,GAVtB,mBAUhBO,EAVgB,KAUJC,EAVI,KA2BvB,OAfAC,qBAAU,WACR,IAAKX,EACH,OAAO,EAGT,SAASY,IACPF,EAAcR,KAIhB,OADAD,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MAGjD,IAEIH,GCvBHM,G,OAAmB,CACvBC,EAAG,EACHC,EAAG,EACHC,MAAO,IAiDMC,EA9CH,SAAC,GAAgB,IAAdtB,EAAa,EAAbA,OAAa,EACQW,mBAASO,GADjB,mBACnBK,EADmB,KACRC,EADQ,OAEYb,mBAAS,GAFrB,mBAEnBc,EAFmB,KAENC,EAFM,OAGcf,mBAAS,GAHvB,mBAGnBgB,EAHmB,KAGLC,EAHK,KAIpBC,EAAcC,iBAAO,MACrBlB,EAAaV,IAEnBY,qBAAU,WACRiB,MAGC,IAEHjB,qBAAU,WACRkB,QAAQC,IAAIrB,GACZc,EAAeG,EAAYK,QAAQC,aACnCP,EAAgBC,EAAYK,QAAQE,gBAGnC,CAACxB,IAEJ,IAAMmB,EAAY,WAChB/B,EAAOqC,GAAG,mBAAmB,SAACC,GAC5Bd,EAAac,OAKjB,OACE,yBAAKC,IAAKV,EAAa5B,UAAU,aAC/B,kBAAC,QAAD,CAAOK,MAAOmB,EAAahB,OAAQkB,EAAca,WAAS,EAACvC,UAAU,OACnE,kBAAC,QAAD,KACE,kBAAC,OAAD,CACEkB,EAAGI,EAAUH,EACbA,EAAGG,EAAUH,EACbqB,OAAQ,EAAE,GAAI,EAAG,IAAK,GAAI,GAAI,IAC9BC,QAAM,EACNC,SAAUpB,EAAUF,MACpBuB,OAAO,c,0BC3CbC,G,OAAQ,CACZ,CACEC,KAAM,IACNC,KAAM,QACL,CACDD,KAAM,aACNC,KAAM,aAIJC,EAAcC,aAAW,SAACC,GAAD,MAAY,CACzCC,KAAM,CACJC,gBAAiB,cACjB,UAAW,CACTA,gBAAiBC,IAAU,MAE7B,WAAY,CACVD,gBAAiBC,IAAU,MAE7B5C,OAAQ,OACR6C,SAAU,OACVC,OAAQ,QACRC,QAAS,MACTC,SAAU,SACVC,WAAY,MACZC,aAAc,UAfEV,CAiBhBW,KAoBWC,EAlBA,WAEb,OACE,gCACGhB,EAAMiB,KAAI,SAAChB,EAAMiB,GAAP,OACT,kBAACf,EAAD,KACE,kBAAC,IAAD,CACEgB,IAAKD,EACLE,GAAKnB,EAAKA,MAAQ,KAElB,uBAAG7C,UAAS,iBAAY6C,EAAKC,eC7CnCmB,EAAmB,CACvBC,KAAM,EACNC,OAAQ,EACRC,MAAO,GA6CMC,EA1CQ,SAAC,GAAc,IAAbtE,EAAY,EAAZA,OAAY,EACDW,mBAASuD,GADR,mBAC5BK,EAD4B,KACjBC,EADiB,KAGnC1D,qBAAU,WACRiB,MAGC,IAEH,IAAMA,EAAY,WAChB/B,EAAOqC,GAAG,yBAAyB,SAACoC,GAClCD,EAAaC,GACbzC,QAAQC,IAAIwC,OAIVC,EAAiB,SAACD,GACtB,OAAGA,EAAY,IACP,GAAN,OAAUE,WAAWF,GAAWG,QAAQ,GAAxC,OAGM,GAAN,OAAUD,WAAWF,EAAU,KAAKG,QAAQ,GAA5C,OAIJ,OACE,yBAAK3E,UAAU,yBACb,yBAAKA,UAAU,QACb,+BAAQyE,EAAeH,EAAUJ,QAGnC,yBAAKlE,UAAU,UACb,+BAAQyE,EAAeH,EAAUH,UAGnC,yBAAKnE,UAAU,SACb,+BAAQyE,EAAeH,EAAUF,W,iBCK1BC,EA7CQ,SAAC,GAAc,IAAbtE,EAAY,EAAZA,OACnB6E,GAAO,EA4BX,OACE,kBAAC,IAAD,CACEC,QAAS,CAAEC,KAAM,SAAUC,SAAU,CAAEC,IAAK,MAAOd,KAAM,QACzDe,MAAO,CACHC,QAAS,iBACT/B,gBAAiB,OACjB4B,SAAU,WACV1E,MAAO,IACPG,OAAQ,KAEZ2E,OApCe,SAACC,EAAKC,GACvB,IAAIT,EAAM,CACRA,GAAO,EAEP,IAAMU,EAAS,CACblE,MAAOiE,EAAKjE,MAAMmE,OAClBC,MAAO,EAAOH,EAAKI,UAGrB1D,QAAQC,IAAIsD,EAAQD,EAAKI,UAEzB1F,EAAO2F,KAAK,gBAAiBJ,GAE7BK,YAAW,WAAQf,GAAO,IAAQ,OAwBlCgB,MApBc,WAMhB7F,EAAO2F,KAAK,gBALG,CACbtE,MAAO,EACPoE,MAAO,Q,iBCXEK,G,OATF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAAU9F,EAAe,EAAfA,UAEvB,OACE,kBAAC+F,EAAA,EAAD,CAAMC,WAAS,EAAChG,UAAWiG,IAAW,OAAQjG,IAC1C8F,KCWOI,EAdG,SAAC,GAAgB,IAAdnG,EAAa,EAAbA,OAEnB,OACE,kBAAC,EAAD,CAAMC,UAAU,QACd,kBAAC,EAAD,CAAKD,OAAQA,IAEb,kBAACgG,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,CAAgBrG,OAAQA,IACxB,kBAACsG,EAAD,CAAUtG,OAAQA,OCoCXuG,G,OAhCH,WAAO,IAAD,EACY5F,mBAAS,MADrB,mBACTX,EADS,KACDwG,EADC,KAGhB1F,qBAAU,WACR2F,MAGC,IAEH,IAAMA,EAAK,uCAAG,4BAAAC,EAAA,sDACNC,EAAKC,IAAW,SAAU,QAChCJ,EAAUK,IAAW,UAAD,OAAWF,EAAX,WAFR,2CAAH,qDAKX,OACE,yBAAK1G,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6G,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAM/G,OAAQA,KAEhB,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,CAAW/G,OAAQA,UC/BXgH,QACW,cAA7B5G,OAAO6G,SAASC,UAEe,UAA7B9G,OAAO6G,SAASC,UAEhB9G,OAAO6G,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhG,QAAQgG,MAAMA,EAAMC,a","file":"static/js/main.8647a8a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport 'react-nipple/lib/styles.css';\r\n\r\nconst Home = ({ socket }) => {\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import { useState, useEffect } from 'react';\r\n\r\nfunction useWindowSize() {\r\n  const isClient = typeof window === 'object';\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n    \r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Stage, Layer, Line } from 'react-konva';\r\nimport useWindowSize from './../../Services/JS/useWindowSize'\r\n\r\nimport './Map.scss'\r\n\r\nconst initialPositions = {\r\n  x: 0,\r\n  y: 0,\r\n  angle: 0\r\n}\r\n\r\nconst Map = ({ socket }) => {\r\n  const [positions, setPositions] = useState(initialPositions)\r\n  const [canvasWidth, setCanvasWidth] = useState(0)\r\n  const [canvasHeight, setCanvasHeight] = useState(0)\r\n  const mapCtnerRef = useRef(null)\r\n  const windowSize = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    initEvent()\r\n\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(windowSize)\r\n    setCanvasWidth(mapCtnerRef.current.offsetWidth)\r\n    setCanvasHeight(mapCtnerRef.current.offsetHeight)\r\n\r\n    // eslint-disable-next-line\r\n  }, [windowSize])\r\n\r\n  const initEvent = () => {\r\n    socket.on('POSITIONS:INFOS', (_positions) => {\r\n      setPositions(_positions);\r\n      //console.log(_positions)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div ref={mapCtnerRef} className=\"map-ctner\">\r\n      <Stage width={canvasWidth} height={canvasHeight} draggable className=\"map\">\r\n        <Layer>\r\n          <Line\r\n            x={positions.y}\r\n            y={positions.y}\r\n            points={[-20, 0, 20, -10, 20, 10]}\r\n            closed\r\n            rotation={positions.angle}\r\n            stroke=\"black\"\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, withStyles } from '@material-ui/core'\r\nimport { lightBlue } from '@material-ui/core/colors';\r\n\r\nimport \"./Header.scss\"\r\n\r\nconst links = [\r\n  {\r\n    link: \"/\",\r\n    icon: \"home\"\r\n  }, {\r\n    link: \"/direction\",\r\n    icon: \"gamepad\"\r\n  }\r\n]\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    '&:hover': {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n    '&:active': {\r\n      backgroundColor: lightBlue[600],\r\n    },\r\n    height: \"50px\",\r\n    minWidth: \"50px\",\r\n    margin: \"0 5px\",\r\n    padding: \"5px\",\r\n    fontSize: \"1.3rem\",\r\n    lineHeight: \"1.5\",\r\n    borderRadius: \"50%\"\r\n  },\r\n}))(Button);\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <header>\r\n      {links.map((link, linkKey) => (\r\n        <ColorButton>\r\n          <Link\r\n            key={linkKey}\r\n            to={ link.link || \"#\" } \r\n          >\r\n            <i className={`fas fa-${link.icon}`}></i>\r\n          </Link>\r\n        </ColorButton>\r\n      ))}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useEffect, useState } from 'react';\r\nconst initialDistances = {\r\n  left: 0,\r\n  middle: 0,\r\n  right: 0,\r\n}\r\n\r\nconst DistanceSensor = ({socket}) => {\r\n  const [distances, setDistances] = useState(initialDistances)\r\n\r\n  useEffect(() => {\r\n    initEvent()\r\n\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const initEvent = () => {\r\n    socket.on('DISTANCE_SENSOR:INFOS', (_distance) => {\r\n      setDistances(_distance);\r\n      console.log(_distance)\r\n    });\r\n  }\r\n\r\n  const distanceFormat = (_distance) => {\r\n    if(_distance < 100) {\r\n      return `${parseFloat(_distance).toFixed(1)} cm`\r\n    }\r\n    else {\r\n      return `${parseFloat(_distance/100).toFixed(1)} m`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"distance-sensor-block\">\r\n      <div className=\"left\">\r\n        <label>{distanceFormat(distances.left)}</label>\r\n      </div>\r\n\r\n      <div className=\"middle\">\r\n        <label>{distanceFormat(distances.middle)}</label>\r\n      </div>\r\n\r\n      <div className=\"right\">\r\n        <label>{distanceFormat(distances.right)}</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DistanceSensor","import React from 'react';\r\nimport ReactNipple from 'react-nipple';\r\n\r\nconst DistanceSensor = ({socket}) => {\r\n  let flag = false\r\n\r\n  const handleMove = (evt, data) => {\r\n    if(!flag) {\r\n      flag = true\r\n\r\n      const values = {\r\n        angle: data.angle.degree,\r\n        force: 100/50*data.distance\r\n      }\r\n\r\n      console.log(values, data.distance)\r\n      \r\n      socket.emit('DIRECTION:SET', values);\r\n\r\n      setTimeout(() => { flag = false}, 100)\r\n    }\r\n  }\r\n\r\n  const handleEnd = () => {\r\n    const values = {\r\n      angle: 0,\r\n      force: 0\r\n    }\r\n      \r\n    socket.emit('DIRECTION:SET', values);\r\n  }\r\n\r\n  return (\r\n    <ReactNipple\r\n      options={{ mode: 'static', position: { top: '50%', left: '50%' } }}\r\n      style={{\r\n          outline: '1px dashed red',\r\n          backgroundColor: 'blue',\r\n          position: 'relative',\r\n          width: 150,\r\n          height: 150\r\n      }}\r\n      onMove={handleMove}\r\n      onEnd={handleEnd}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DistanceSensor","import React from 'react';\r\nimport { Grid } from '@material-ui/core'\r\nimport classNames from 'classnames';\r\n\r\nimport './Page.scss'\r\n\r\nconst Page = ({children, className}) => {\r\n\r\n  return (\r\n    <Grid container className={classNames(\"page\", className)}>\r\n      { children }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Page","import React from 'react';\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport 'react-nipple/lib/styles.css';\r\n\r\nimport { Map, Joystick, DistanceSensor, Page } from './../../Components'\r\n\r\nconst Direction = ({ socket }) => {\r\n\r\n  return (\r\n    <Page className=\"page\">\r\n      <Map socket={socket} />\r\n\r\n      <Grid item sm={12}>\r\n        <DistanceSensor socket={socket} />\r\n        <Joystick socket={socket} />\r\n      </Grid>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Direction","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport openSocket from 'socket.io-client';\r\nimport localIpUrl  from 'local-ip-url';\r\n\r\n// FONT AWESOME\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\n\r\nimport { Home, Direction } from './Pages'\r\nimport { Header } from './Components'\r\n\r\nimport './App.scss'\r\n\r\n\r\nconst App = () => {\r\n  const [socket, setSocket] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getIp()\r\n\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const getIp = async () => {\r\n    const ip = localIpUrl('public', 'ipv4');\r\n    setSocket(openSocket(`http://${ip}:8080`));\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home socket={socket} />\r\n          </Route>\r\n          <Route exact path=\"/direction\">\r\n            <Direction socket={socket} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}